{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/board/board.component.ts","webpack:///src/app/home/board/board.component.html","webpack:///src/app/home/board/dialog-result/dialog-result.component.ts","webpack:///src/app/home/board/dialog-result/dialog-result.component.html","webpack:///src/app/home/board/key/key.component.ts","webpack:///src/app/home/board/key/key.component.html","webpack:///src/app/home/board/name-dialog/name-dialog.component.ts","webpack:///src/app/home/board/name-dialog/name-dialog.component.html","webpack:///src/app/home/board/password-dialog/password-dialog.component.ts","webpack:///src/app/home/board/password-dialog/password-dialog.component.html","webpack:///src/app/home/board/password/password.component.ts","webpack:///src/app/home/board/password/password.component.html","webpack:///src/app/home/board/picture/picture.component.ts","webpack:///src/app/home/board/picture/picture.component.html","webpack:///src/app/home/board/score/score.component.ts","webpack:///src/app/home/board/score/score.component.html","webpack:///src/app/home/board/timer/timer.component.ts","webpack:///src/app/home/board/timer/timer.component.html","webpack:///src/app/home/footer/footer.component.ts","webpack:///src/app/home/footer/footer.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/loading/loading.component.ts","webpack:///src/app/home/loading/loading.component.html","webpack:///src/app/home/main-menu/main-menu.component.ts","webpack:///src/app/home/main-menu/main-menu.component.html","webpack:///src/app/home/nav-menu/nav-menu.component.ts","webpack:///src/app/home/nav-menu/nav-menu.component.html","webpack:///src/app/home/settings/settings.component.ts","webpack:///src/app/home/settings/settings.component.html","webpack:///src/app/shared/helpers/ParseToStringArr-helper.ts","webpack:///src/app/shared/helpers/RandomIntInclusive-helper.ts","webpack:///src/app/shared/models/char.model.ts","webpack:///src/app/shared/models/player.model.ts","webpack:///src/app/shared/models/services/config/config.model.ts","webpack:///src/app/shared/services/config.service.ts","webpack:///src/app/shared/services/db.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BoardComponent","configService","dbService","isLoading","badTry","roundResult","gameResult","roundNr","passwordArr","hidePasswordArr","startTime","stopTimer","player1","player2","player","keyboard","$res","_configData","subscribe","x","config","initAlphabetObjArr","multiPlrGame","generatePasswordForSinglePlayerGame","setTimeout","unsubscribe","onlyWord","password","passwords","getRandomIntInclusive","length","sentences","parseToStringArr","initHidePasswdArr","alphabet","i","push","forEach","res","char","selected","isInPasswd","find","nrOfStrikeCharInPassword","passwordLength","roundCount","setResultRoundMultiPlayerGame","isPlaying","roundScore","stopTime","playerChoosingPassword","startTimer","name","clearBoard","isMultiPlayerGame","choosePasswordForOpponent","changePlayerPlaying","endTime","sec","nextRound","next","setPassword","DialogResultComponent","faWindowClose","faSadTear","faLaughBeam","display","emit","val","_roundResult","_gameResult","KeyComponent","_char","NameDialogComponent","_player","PasswordDialogComponent","errorAlert","checkPassword","charAt","PasswordComponent","PictureComponent","src","ScoreComponent","faCheckCircle","faTimesCircle","faUser","winner","player1Score","Array","fill","player2Score","roundWinner","player1WinRounds","player2WinRounds","drawPlayer","TimerComponent","clearInterval","interval","onStopTime","setInterval","countTime","FooterComponent","faAngleDoubleUp","faAngleDoubleDown","upIcon","location","assign","HomeComponent","router","url","LoadingComponent","_isLoading","MainMenuComponent","typeOfGame","setSinglePlayerGame","setMultiPlayerGame","NavMenuComponent","faBars","faPause","faBackspace","SettingsComponent","fb","selectedValue","isDisable","succesAlert","createForm","form","group","timeCb","useTime","required","timeVal","min","rounds","Boolean","value","controls","setValidators","clearValidators","updateValueAndValidity","valid","conf","Number","get","ParseToStringArrHelper","toUpperCase","resultArr","RandomIntInclusiveHelper","max","Math","ceil","floor","random","CharModel","PlayerModel","ConfigModel","ConfigService","clear","dataStore","configData","refreshConfig","asObservable","providedIn","DbService","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","//angular\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n//components\nimport { MainMenuComponent } from './home/main-menu/main-menu.component';\nimport { BoardComponent } from './home/board/board.component';\nimport { SettingsComponent } from './home/settings/settings.component';\n\n\nconst routes: Routes = [\n  {path: '', component: MainMenuComponent},\n  {path: 'board', component: BoardComponent},\n  {path: 'settings', component: SettingsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'wisielec';\n}\n","<div class=\"container main-txt\">\n  <app-home></app-home>\n</div>","//angular\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n//components\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { MainMenuComponent } from './home/main-menu/main-menu.component';\nimport { BoardComponent } from './home/board/board.component';\nimport { KeyComponent } from './home/board/key/key.component';\nimport { PictureComponent } from './home/board/picture/picture.component';\nimport { DialogResultComponent } from './home/board/dialog-result/dialog-result.component';\nimport { SettingsComponent } from './home/settings/settings.component';\nimport { PasswordComponent } from './home/board/password/password.component';\nimport { NavMenuComponent } from './home/nav-menu/nav-menu.component';\nimport { ScoreComponent } from './home/board/score/score.component';\nimport { LoadingComponent } from './home/loading/loading.component';\nimport { NameDialogComponent } from './home/board/name-dialog/name-dialog.component';\nimport { TimerComponent } from './home/board/timer/timer.component';\nimport { PasswordDialogComponent } from './home/board/password-dialog/password-dialog.component';\nimport { FooterComponent } from './home/footer/footer.component';\n\n//primeng\nimport { DialogModule } from 'primeng/dialog';\nimport {CheckboxModule} from 'primeng/checkbox';\nimport {RadioButtonModule} from 'primeng/radiobutton';\nimport {ToggleButtonModule} from 'primeng/togglebutton';\n\n//other\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    MainMenuComponent,\n    BoardComponent,\n    NavMenuComponent,\n    KeyComponent,\n    PasswordComponent,\n    PictureComponent,\n    DialogResultComponent,\n    SettingsComponent,\n    ScoreComponent,\n    LoadingComponent,\n    NameDialogComponent,\n    TimerComponent,\n    PasswordDialogComponent,\n    FooterComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    FontAwesomeModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    DialogModule,\n    CheckboxModule,\n    RadioButtonModule,\n    ReactiveFormsModule,\n    ToggleButtonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","//angular\nimport { Component, OnInit, Input, OnDestroy } from '@angular/core';\n//models\nimport { CharModel } from 'src/app/shared/models/char.model';\nimport { ConfigModel } from 'src/app/shared/models/services/config/config.model';\nimport { PlayerModel } from 'src/app/shared/models/player.model';\n//services\nimport { DbService } from 'src/app/shared/services/db.service';\nimport { ConfigService } from 'src/app/shared/services/config.service';\n//other\nimport { ParseToStringArrHelper } from 'src/app/shared/helpers/ParseToStringArr-helper';\nimport { RandomIntInclusiveHelper } from 'src/app/shared/helpers/RandomIntInclusive-helper';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss']\n})\nexport class BoardComponent implements OnInit, OnDestroy {\n  isLoading = true;\n  badTry: number = 0; //ilość złych prób wyboru znaku\n  roundResult: boolean | null = null; //Czy graz grający przegrał czy wygrał runde\n  gameResult: PlayerModel | null = null; //który gracz wygrał całą rozgrywkę\n  roundScore: number | null;  // który gracz wygrał rundę\n  roundNr: number = 1;\n  config: ConfigModel;\n\n  password: string | null; //tymczasowe hasło\n  passwordArr: string[] = []; \n  hidePasswordArr: string[] = [];\n  playerChoosingPassword: PlayerModel;   \n\n  startTime: number | null = null;\n  stopTimer: boolean =false;\n\n  player1: PlayerModel = new PlayerModel(1, \"Player 1\", true);\n  player2: PlayerModel = new PlayerModel(2, \"Player 2\", false);\n  player: PlayerModel | null = null;\n  \n  keyboard: CharModel[] = [];\n\n  $res: Subscription;\n  constructor(private configService: ConfigService, private dbService: DbService) { \n \n  }\n\n  ngOnInit(): void {\n    this.$res = this.configService._configData.subscribe(x => {\n      this.config = x;\n    });\n    \n    this.initAlphabetObjArr();\n\n    if(this.config.multiPlrGame)\n    {\n      this.player = this.player1;\n    }\n    else\n    {\n      this.generatePasswordForSinglePlayerGame();\n    }\n    setTimeout(() => {\n      this.isLoading = false;\n    }, 500);\n  }\n\n  ngOnDestroy(): void{\n    if(this.$res){\n      this.$res.unsubscribe();\n    }\n  }\n\n  //#region Init board\n\n  generatePasswordForSinglePlayerGame(){\n    if(this.config.onlyWord){\n      this.password = this.dbService.passwords[RandomIntInclusiveHelper.getRandomIntInclusive(0,this.dbService.passwords.length-1)];\n    }\n    else{\n      this.password = this.dbService.sentences[RandomIntInclusiveHelper.getRandomIntInclusive(0,this.dbService.sentences.length-1)];\n    }\n    this.passwordArr = ParseToStringArrHelper.parseToStringArr(this.password);\n    this.initHidePasswdArr();\n  }\n\n  initAlphabetObjArr(){\n    this.keyboard = [];\n    let alphabet = this.dbService.alphabet;\n    for(let i = 0; i< alphabet.length; i++){\n      this.keyboard.push(new CharModel(i, alphabet[i], false, false));\n    }\n  }\n\n  initHidePasswdArr(){\n    this.hidePasswordArr = [];\n    this.passwordArr.forEach(x => {\n      if(x === ' '){\n        this.hidePasswordArr.push('.');\n        //this.charOfHitCount++;\n      }\n      else{\n        this.hidePasswordArr.push('-');\n      }\n    });\n  }\n  //#endregion\n\n  passwordLength(password: string[]): number{\n    let res: number = 0;\n    for(let i=0; i< password.length; i++){\n      if(password[i] !== ' '){\n        res++;\n      }\n    }\n    return res;\n  }\n  //#region Keyboard\n  selectChar(char: CharModel){\n    if(char.selected){  //czy znak był już wybrany\n      return false;\n    }\n    this.roundResult = null\n    let isInPasswd = false;\n\n    for(let i = 0; i < this.passwordArr.length; i++){ //sprawdza czy znak jest w haśle i nadpisuje go na swoim miejscu w ukrytym haśle\n      if(this.passwordArr[i] === char.char){\n        this.hidePasswordArr[i] = char.char;\n        isInPasswd = true;\n      }\n    }\n\n    this.keyboard.find(x => x.char === char.char).selected = true;\n    this.keyboard.find(x => x.char === char.char).isInPasswd = isInPasswd;\n\n    if(isInPasswd){\n      if(this.nrOfStrikeCharInPassword === this.passwordLength(this.passwordArr)){\n        if(this.config.multiPlrGame){\n          if(this.roundNr < this.config.roundCount)\n          {\n            this.roundResult = true;\n            this.setResultRoundMultiPlayerGame();\n          }\n          else\n          {\n            if(this.player1.isPlaying){ \n              this.roundScore = 1;\n            }\n            if(this.player2.isPlaying){\n              this.roundScore = 2;\n            }\n          }\n          this.stopTime(false);\n        }\n        else{\n          this.roundResult = true;\n          this.stopTime(false);\n        }\n      }\n    }\n    else{\n      this.badTry++;\n      if(this.badTry === 9){\n        if(!this.config.multiPlrGame){\n            this.roundResult = false; \n        }\n        else{\n            if(this.roundNr < this.config.roundCount)\n            {\n              this.roundResult = false;\n              this.setResultRoundMultiPlayerGame();\n            }\n            else{\n              if(this.player1.isPlaying){ \n                this.roundScore = 1;\n              }\n              if(this.player2.isPlaying){\n                this.roundScore = 2;\n              }\n            }\n            this.stopTime(false);\n        }    \n      }\n    }\n  }\n\n  //#endregion\n\n  setPassword(password: string){\n    this.password = password;\n    this.passwordArr = ParseToStringArrHelper.parseToStringArr(this.password);\n    this.initHidePasswdArr();\n    this.playerChoosingPassword = null;\n    this.startTimer();\n  }\n\n  setResultRoundMultiPlayerGame(){\n    if(this.player1.isPlaying){ \n      this.roundScore = this.roundResult ? 1 : 2;\n    }\n    if(this.player2.isPlaying){\n      this.roundScore = this.roundResult ? 2 : 1;\n    }\n  }\n\n  //#region plr-name dialog\n  next(player: PlayerModel){\n    if(player.id === 1){\n      this.player1.name = player.name;\n      this.player = this.player2;\n    }\n    if(player.id === 2){\n      this.player2.name = player.name;\n      this.player = null;\n\n      this.playerChoosingPassword = this.player1;  //wyswietl wybieranie hasla\n    }\n  }\n  //#endregion\n\n  nextRound(){\n    this.clearBoard();\n    if(this.isMultiPlayerGame){\n      if(this.roundNr < this.config.roundCount){\n        this.choosePasswordForOpponent();\n      }\n      this.roundScore = null; \n      this.changePlayerPlaying();\n    }\n    else{\n      this.generatePasswordForSinglePlayerGame();\n    }\n    this.roundNr++;\n\n  }\n\n  choosePasswordForOpponent(){\n    if(this.player1.isPlaying){\n      this.playerChoosingPassword = this.player2;  //wybiera haslo dla rpzeciwnika\n    }\n    else{\n      this.playerChoosingPassword = this.player1;  //wybiera haslo dla rpzeciwnika\n    }\n  }\n\n  clearBoard(){\n    this.roundResult = null;\n    this.badTry = 0;\n    this.roundScore =null;\n    this.initAlphabetObjArr();\n    this.initHidePasswdArr();\n  }\n\n  changePlayerPlaying(){\n    this.player1.isPlaying = !this.player1.isPlaying; \n    this.player2.isPlaying = !this.player2.isPlaying;\n  }\n\n  setWinnerPlayer(player: PlayerModel){\n    setTimeout(() => {\n      this.gameResult = player;\n        }, 1);\n\n  }\n\n  //#region Timer\n  stopTime(endTime:boolean){\n    this.startTime = null;\n    this.stopTimer = true;\n    if(endTime){\n      if(this.roundNr < this.config.roundCount)\n      {\n        this.roundResult = false;\n      }\n      this.setResultRoundMultiPlayerGame();\n    }\n  }\n\n  startTimer(){\n    this.stopTimer = false;\n    this.startTime = this.config.sec;\n  }\n  //#endregion\n\n  get playerPlaying(): string{\n    return this.player1.isPlaying ? this.player1.name : this.player2.name;\n  }\n\n  get isMultiPlayerGame(): boolean{\n    return this.config.multiPlrGame;\n  }\n\n  get nrOfStrikeCharInPassword(): number{\n    let res = this.hidePasswordArr.length;\n    this.hidePasswordArr.forEach(x => (x === \".\" || x === \"-\") ? res--: res);\n    return res;\n  }\n\n}","<app-loading [isLoading]=\"isLoading\"></app-loading>\n<div  id=\"board\">\n    <div *ngIf=\"isMultiPlayerGame\">\n        <div>\n            <app-score [player1]=\"player1\" [player2]=\"player2\" (winner)=\"setWinnerPlayer($event)\" [roundCount]=\"config.roundCount\" [roundScore]=\"roundScore\" style=\"width: 100%;\"></app-score>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-9\">\n                <h3 class=\"player-name-header\">Gra: {{playerPlaying}}</h3>\n            </div>\n            <div *ngIf=\"config.useTime\" class=\"col-3\">\n                <app-timer [stopTimer]=\"stopTimer\" [startTimer]=\"startTime\" (stopTime)=\"stopTime($event)\"></app-timer>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12 col-lg-6\">\n            <app-picture [badTry]=\"badTry\"></app-picture>\n        </div>\n        <div class=\"col-12 col-lg-6\">\n            <div id=\"password-div\" class=\"row justify-content-center\" >\n                <div *ngFor=\"let char of hidePasswordArr; let i = index\" class=\"col-char\">\n                    <app-password [char]=\"char\"></app-password>\n                </div>\n            </div>       \n        </div>\n    </div>\n    <div id=\"key\" class=\"row justify-content-center\">\n        <div *ngFor=\"let char of keyboard; let i = index\" class=\"col-2 col-lg-1\">\n            <app-key [char]=\"char\"(click)=\"selectChar(char)\"></app-key>\n        </div>\n    </div>\n</div>\n<app-dialog-result [password]=\"password\" [isMultiPlayerGame]=\"isMultiPlayerGame\" [gameResult]=\"gameResult\" [roundResult]=\"roundResult\" (nextRound)=\"nextRound()\"></app-dialog-result>\n<app-name-dialog [(player)]=\"player\" (next)=\"next($event)\"></app-name-dialog>\n<app-password-dialog [onlyWord]=\"config.onlyWord\" [player]=\"playerChoosingPassword\" (setPassword)=\"setPassword($event)\"></app-password-dialog>","//angular\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n//models\nimport { PlayerModel } from 'src/app/shared/models/player.model';\n//other\nimport { faWindowClose, faSadTear, faLaughBeam } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-dialog-result',\n  templateUrl: './dialog-result.component.html',\n  styleUrls: ['./dialog-result.component.scss']\n})\nexport class DialogResultComponent implements OnInit {\n  //#region icons\n    faWindowClose = faWindowClose;\n    faSadTear = faSadTear;\n    faLaughBeam = faLaughBeam;\n  //#endregion\n\n  display: boolean = false;\n  _roundResult: boolean;\n  _gameResult: PlayerModel | null;\n\n  constructor() { }\n\n  @Input()\n  password: string;\n  \n  @Input()\n  isMultiPlayerGame;\n\n  @Input()\n  set roundResult(val: boolean | null){\n    if(val === true || val === false){\n      this._roundResult = val;\n      this.display = true;\n    }\n  }\n\n  @Input()\n  set gameResult(val: PlayerModel){\n    if(!!val)\n    {\n      this._gameResult = val;\n      this.display = true;\n    }\n  }\n\n  @Output() \n  nextRound = new EventEmitter();\n\n  ngOnInit(): void {\n  }\n\n  onNextRound(){\n    this.display = false;\n    this.nextRound.emit(null);\n  }\n\n}\n","<div *ngIf=\"display\">\n    <div class=\"dialog\">\n        <div class=\"dialog-main\">\n            <div class=\"dialog-header text-right\">\n                <fa-icon [icon]=\"faWindowClose\" class=\"fa-lg suc-icon close-icon\" [routerLink]=\"['']\"></fa-icon>\n            </div>\n            <div id=\"body\">\n                <div *ngIf=\"!!_gameResult\">\n                    <p *ngIf=\"_gameResult.id !== -1\">The winner is - {{_gameResult.name}}</p>\n                    <p *ngIf=\"_gameResult.id === -1\">{{_gameResult.name}}</p>\n                    <p>Congratulations :)</p>\n                </div>\n\n                <div id=\"text\" *ngIf=\"!_gameResult\" class=\"text-center\">\n                    <div *ngIf=\"_roundResult; else badResult\" class=\"text-center\">\n                        <fa-icon id=\"happy-icon\" [icon]=\"faLaughBeam\" class=\"fa-5x suc-icon\"></fa-icon>\n                        Yes! You guessed the password!\n                    </div>\n                    <ng-template #badResult class=\"text-center\">\n                        <fa-icon id=\"sad-icon\" [icon]=\"faSadTear\" class=\"fa-5x suc-icon\"></fa-icon>\n                        <p>Ups.. You lost.</p>\n                        <p>The password was:</p>\n                    </ng-template>\n                </div>\n                <div id=\"password-div\" *ngIf=\"!_gameResult && !_roundResult\" class=\"text-center\">\n                    <p>{{password}}</p>\n                </div>\n\n                <div>\n                    <div *ngIf=\"!_gameResult\">\n                        <div class=\"text-center\">\n                            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"onNextRound()\">\n                                <span *ngIf=\"isMultiPlayerGame; else singlePlayerBtn\">It's time for the opponent!</span>\n                                <ng-template #singlePlayerBtn>Next round!</ng-template>\n                            </button>\n                        </div> \n                    </div>\n                </div>\n                <div class=\"text-center\">\n                    <button type=\"button\" class=\"btn btn-outline-secondary\" [routerLink]=\"['']\">Back to menu</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","//angular\nimport { Component, OnInit, Input } from '@angular/core';\n//models\nimport { CharModel } from 'src/app/shared/models/char.model';\n\n@Component({\n  selector: 'app-key',\n  templateUrl: './key.component.html',\n  styleUrls: ['./key.component.scss']\n})\nexport class KeyComponent implements OnInit {\n\n  _char: CharModel;\n\n  @Input()\n  set char(val: CharModel){\n    this._char = val;\n  };\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"text-center char\" [class.not-select]=\"!_char.selected\" [class.strike]=\"_char.selected && _char.isInPasswd\" \r\n[class.missed]=\"_char.selected && !_char.isInPasswd\">\r\n    {{_char.char}}\r\n</div>","//angular\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n//models\nimport { PlayerModel } from 'src/app/shared/models/player.model';\n//other\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-name-dialog',\n  templateUrl: './name-dialog.component.html',\n  styleUrls: ['./name-dialog.component.scss']\n})\nexport class NameDialogComponent implements OnInit {\n  //#region icons\n    faWindowClose = faWindowClose;\n  //#endregion\n\n  display: boolean = false;\n  _player: PlayerModel;\n\n  constructor() { }\n\n  @Input()\n  set player(val: PlayerModel){\n    if(!!val)\n    {\n      this._player = val;\n      this.display = true;\n    }\n  }\n\n  @Output() \n  next = new EventEmitter();\n\n  ngOnInit(): void {\n  }\n\n  onNext(){\n    this.display = false;\n    this.next.emit(this._player);\n  }\n\n  get error(): Boolean{\n      return this._player.name.length < 2;\n  }\n}\n","<div *ngIf=\"display\">\n    <div class=\"dialog\">\n        <div class=\"dialog-main\">\n            <div class=\"dialog-header text-right\">\n                <fa-icon [icon]=\"faWindowClose\" class=\"fa-lg suc-icon close-icon\" [routerLink]=\"['']\"></fa-icon>\n            </div>\n            <div id=\"body\">\n                <div id=\"error-alert\" *ngIf=\"error\" class=\"alert alert-secondary\" role=\"alert\">\n                    Incorrect data.  :(\n                </div> \n\n                <div id=\"text\" class=\"text-center\">\n                    <div *ngIf=\"_player.id === 1; else plr2\" class=\"text-center\">\n                        Enter the first player's name:\n                    </div>\n                    <ng-template #plr2 class=\"text-center\">\n                        Enter the second player's name:\n                    </ng-template>\n                </div>\n                <div>\n                    <input id=\"plr1Name\" class=\"form-control text-center\" [(ngModel)]=_player.name minlength=\"2\" placeholder=\"Player name...\">\n                </div>\n\n                <div>\n                    <div class=\"text-right\">\n                        <button type=\"button\" [disabled]=\"error\" class=\"btn btn-outline-secondary\" (click)=\"onNext()\">Next</button>\n                    </div> \n                </div>\n            </div>\n        </div>\n    </div>\n</div>","//angular\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n//models\nimport { PlayerModel } from 'src/app/shared/models/player.model';\n//other\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-password-dialog',\n  templateUrl: './password-dialog.component.html',\n  styleUrls: ['./password-dialog.component.scss']\n})\nexport class PasswordDialogComponent implements OnInit {\n//#region icons\nfaWindowClose = faWindowClose;\n//#endregion\nerrorAlert: string = \"\";\ndisplay: boolean = false;\npassword: string | null;\n_player: PlayerModel;\n\nconstructor() { }\n\n@Input()\nonlyWord: boolean;\n\n@Input()\nset player(val: PlayerModel){\n  if(!!val)\n  {\n    this._player = val;\n    this.password = \"\";\n    this.display = true;\n  }\n}\n\n@Output() \nsetPassword = new EventEmitter();\n\nngOnInit(): void {\n}\n\nnext(){\n  if(this.checkPassword()){\n    this.setPassword.emit(this.password);\n    this.display = false;\n  }\n  else{\n    this.errorAlert = \"Wrong password, You can't use whitespace.\";\n  }\n}\n\nget error(): string{\n  if(this.password.length < 1){\n    this.errorAlert = \"Easy password. Try a bit harder. :)\";\n  }\n  return this.errorAlert;\n}\n\n\ncheckPassword(): Boolean{\n  if(this.onlyWord){\n    for(let i=0; i < this.password.length; i++){\n      if(this.password.charAt(i) === \" \")\n        return false;\n     }\n     return true;\n  }else{\n    return true;\n  }\n}\n}\n","<div *ngIf=\"display\">\n    <div class=\"dialog\">\n        <div class=\"dialog-main\">\n            <div class=\"dialog-header text-right\">\n                <fa-icon [icon]=\"faWindowClose\" class=\"fa-lg suc-icon close-icon\" [routerLink]=\"['']\"></fa-icon>\n            </div>\n            <div id=\"body\">\n                <div id=\"error-alert\" *ngIf=\"!!error && passwordInp.dirty\" class=\"alert alert-secondary\" role=\"alert\">\n                    {{error}}  \n                </div> \n\n                <div id=\"text\" class=\"text-center\">\n                    <div *ngIf=\"_player.id === 1; else plr2\" class=\"text-center\">\n                        Enter the password for the first player:\n                    </div>\n                    <ng-template #plr2 class=\"text-center\">\n                        Enter the password for the second player:\n                    </ng-template>\n                </div>\n                <div>\n                    <input type=\"password\" class=\"form-control text-center\" (keyup)=\"errorAlert=''\" id=\"passwordInp\" #passwordInp=\"ngModel\" [(ngModel)]=\"password\" placeholder=\"Password...\">\n                </div>\n\n                <div>\n                    <div class=\"text-right\">\n                        <button type=\"button\" [disabled]=\"!!error\" class=\"btn btn-outline-secondary\" (click)=\"next()\">Next</button>\n                    </div> \n                </div>\n            </div>\n        </div>\n    </div>\n</div>","//angular\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss']\n})\nexport class PasswordComponent implements OnInit {\n   \n  _char: string;\n  \n  @Input()\n  set char(val: string){\n    this._char = val;\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"char\" class=\"text-center char\" [class.char-hide]=\"_char==='-'\" [class.char-space]=\"_char === '.'\">\n    {{_char}}\n</div>\n","//angular\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-picture',\n  templateUrl: './picture.component.html',\n  styleUrls: ['./picture.component.scss']\n})\nexport class PictureComponent implements OnInit {\n\n  @Input()\n  set badTry(val: number){\n    this.src = `../../../assets/img/w${val}.png`\n  }\n\n  src: string = \"\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <img src=\"{{src}}\">\n</div>\n","//angular\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n//models\nimport { PlayerModel } from 'src/app/shared/models/player.model';\n//other\nimport { faCheckCircle, faTimesCircle, faUser } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-score',\n  templateUrl: './score.component.html',\n  styleUrls: ['./score.component.scss']\n})\nexport class ScoreComponent implements OnInit {  \n  //#region icons\n    faCheckCircle = faCheckCircle;\n    faTimesCircle = faTimesCircle;\n    faUser = faUser;\n  //#endregion\n\n  private roundNr: number = 0;\n\n  @Input()\n  roundCount: number;\n    \n  @Input()\n  player1: PlayerModel;\n\n  @Input()\n  player2: PlayerModel;\n\n  @Input()\n  set roundScore(roundWinner:number){\n    if(roundWinner === 1 || roundWinner === 2){\n      roundWinner === 1 ? this.player1Score[this.roundNr] = true: this.player1Score[this.roundNr] = false;\n      roundWinner === 2 ? this.player2Score[this.roundNr] = true: this.player2Score[this.roundNr] = false;\n      this.roundNr++;\n      if(this.roundNr ===this.roundCount){\n        let player1WinRounds = 0;\n        let player2WinRounds = 0;\n        this.player1Score.forEach(x => x === true? player1WinRounds++: player1WinRounds);\n        this.player2Score.forEach(x => x === true? player2WinRounds++: player2WinRounds);\n        if(player1WinRounds > player2WinRounds)\n        {\n            this.winner.emit(this.player1);\n        }\n        if(player2WinRounds > player1WinRounds)\n        {\n            this.winner.emit(this.player2);\n        }\n        if(player1WinRounds === player2WinRounds){\n          let drawPlayer = new PlayerModel(-1,'Draw');\n          this.winner.emit(drawPlayer);\n        }\n      }\n    }\n  }\n\n  @Output()\n  winner = new EventEmitter();\n\n  player1Score: Array<any>;\n  player2Score: Array<any>;;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.player1Score = new Array<Boolean>(this.roundCount).fill(null);  \n    this.player2Score = new Array<Boolean>(this.roundCount).fill(null);  \n  }\n\n}\n","<table style=\"width: 100%;\">\n    <tbody>\n        <tr>\n            <td class=\"player1-title\">\n                <fa-icon [icon]=\"faUser\" class=\"fa-lg success-icon\"></fa-icon>\n                {{player1.name}}\n            </td>\n            <td class=\"player1-td text-center\" *ngFor=\"let r of player1Score\">\n                <fa-icon *ngIf=\"r\" [icon]=\"faCheckCircle\" class=\"fa-lg success-icon\"></fa-icon>\n                <fa-icon *ngIf=\"r === false\" [icon]=\"faTimesCircle\" class=\"fa-lg wrong-icon\"></fa-icon>\n            </td>\n        </tr>\n        <tr>\n            <td class=\"player2-title\">\n                <fa-icon [icon]=\"faUser\" class=\"fa-lg success-icon\"></fa-icon>\n                {{player2.name}}\n            </td>\n            <td class=\"player2-td text-center\" *ngFor=\"let r of player2Score\">\n                <fa-icon *ngIf=\"r\" [icon]=\"faCheckCircle\" class=\"fa-lg success-icon\"></fa-icon>\n                <fa-icon *ngIf=\"r === false\" [icon]=\"faTimesCircle\" class=\"fa-lg wrong-icon\"></fa-icon>\n            </td>\n        </tr>\n    </tbody>\n</table>","//amgular\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.scss']\n})\nexport class TimerComponent implements OnInit {\n\n  constructor() { }\n\n  private interval;\n  sec: number = 0;\n\n  @Input()\n  set stopTimer(val: boolean){\n    if(val){\n      clearInterval(this.interval);\n    }\n  }\n\n\n  @Input()\n  set startTimer(sec: number){\n    if(sec > 10){\n      this.sec = sec;\n      this.interval = setInterval(() => {\n        this.countTime(this.sec); \n      }, 1000);\n    }\n  }\n\n  @Output()\n  stopTime = new EventEmitter();\n\n  ngOnInit(): void {\n  }\n\n  countTime(sec: number){\n    this.sec--;\n    if(this.sec === 0)\n    {\n      clearInterval(this.interval);\n      this.onStopTime();\n    }\n  }\n\n  onStopTime(){\n    this.stopTime.emit(true);\n  }\n\n  get timerColorClass(): string{\n    if(this.sec < 10 && this.sec > 3){\n      return 'color-orange';\n    }\n    if(this.sec <= 3 && this.sec > 0){\n      return 'color-red';\n    }\n    return '';\n  }\n}\n","<div id=\"timer-div\">\n    <img src=\"../../../assets/img/timer.png\">\n    <p [ngClass]=\"timerColorClass\" ><span *ngIf=\"sec < 10\">0</span>{{sec}}</p>\n</div>\n","//angular\nimport { Component, OnInit } from '@angular/core';\n//other\nimport { faAngleDoubleUp, faAngleDoubleDown } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  //#region icons\n    faAngleDoubleUp = faAngleDoubleUp;\n    faAngleDoubleDown = faAngleDoubleDown;\n  //#endregion\n\n  upIcon: boolean = true;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  goToUrl(){\n    location.assign(\"https://pl.linkedin.com/in/rados%C5%82aw-stankiewicz-049a6b183\");\n  }\n\n  toggleIcon(){\n    this.upIcon = !this.upIcon;\n  }\n\n}\n","<footer class=\"text-center col-12\">\n    <div class=\"row\" [class.desc-full]=\"upIcon\" [class.desc-part]=\"!upIcon\">\n        <div class=\"offset-1 col-10\">\n            <p>&copy; All rights reserved.</p>\n            <p *ngIf=\"upIcon\">Contact information: <a (click)=\"goToUrl()\">Click!</a></p>\n        </div>\n        <div class=\"col-1 text-right\">\n            <button *ngIf=\"!upIcon\" class=\"btn btn-outline-secondary btn-sm\" (click)=\"toggleIcon()\">\n                <fa-icon id=\"close-icon\" [icon]=\"faAngleDoubleUp\" class=\"fa-lg suc-icon\"></fa-icon>\n            </button>\n            <button *ngIf=\"upIcon\" class=\"btn btn-outline-secondary btn-sm\" (click)=\"toggleIcon()\">\n                <fa-icon  id=\"close-icon\" [icon]=\"faAngleDoubleDown\" class=\"fa-lg suc-icon\"></fa-icon>\n            </button>\n        </div>\n    </div>\n</footer>","//angular\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  get isNotMenu(): boolean{\n    return this.router.url !== '/';\n  }\n\n}\n","<app-nav-menu class=\"nav\" *ngIf=\"isNotMenu\"></app-nav-menu>\r\n<router-outlet></router-outlet>\r\n<app-footer></app-footer>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss']\n})\nexport class LoadingComponent implements OnInit {\n\n  _isLoading:boolean = true;\n\n  @Input()\n  set isLoading(val: boolean){\n    this._isLoading = val;\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"_isLoading\" class=\" spinner-div text-center\">\n  <div id=\"spinner\"  class=\"spinner-grow text-light\" role=\"status\">\n    <span  class=\"sr-only\">Loading...</span>\n  </div>\n</div>\n","//angular\nimport { Component, OnInit } from '@angular/core';\n//services\nimport { ConfigService } from 'src/app/shared/services/config.service';\n\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.scss']\n})\nexport class MainMenuComponent implements OnInit {\n\n  constructor(private config: ConfigService) { }\n\n  ngOnInit(): void {\n  }\n\n  setSinglePlayerGame(){\n    this.config.typeOfGame = false;\n  }\n\n  setMultiPlayerGame(){\n    this.config.typeOfGame = true;\n  }\n}\n","<div id=\"main-menu\" class=\"text-center\">\n    <div class=\"menu-pos-row\">\n        <a (click)=\"setSinglePlayerGame()\" [routerLink]=\"['/board']\">Start</a>\n    </div>\n    <div class=\"menu-pos-row\">\n        <a (click)=\"setMultiPlayerGame()\" [routerLink]=\"['/board']\">Multiplayer</a>\n    </div>\n    <div class=\"menu-pos-row bg\">\n        <a [routerLink]=\"['/settings']\">Settings</a>\n    </div>\n    <img src=\"../../../assets/img/w9.png\">\n</div>\n","//angular\nimport { Component, OnInit } from '@angular/core';\n//other\nimport { faBars, faPause, faBackspace } from '@fortawesome/free-solid-svg-icons';\n\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.scss']\n})\nexport class NavMenuComponent implements OnInit {\n  //#region icons\n    faBars = faBars;\n    faPause = faPause;\n    faBackspace = faBackspace\n  //#endregion\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"dropdown show\">\n    <a class=\"btn btn-outline-dark dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n      <fa-icon [icon]=\"faBars\" class=\"fa-lg\"></fa-icon>\n    </a>\n  \n    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n      <a class=\"dropdown-item\" [routerLink]=\"['']\">\n        <div class=\"row\">\n          <div class=\"col-3\">\n            <fa-icon [icon]=\"faBackspace\"></fa-icon>\n          </div>\n          <div class=\"col-9\">\n            Back to menu \n          </div>\n        </div>\n      </a>\n    </div>\n  </div>","//angular\nimport { Component, OnInit, DoBootstrap, OnDestroy } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n//services\nimport { ConfigService } from 'src/app/shared/services/config.service';\n//models\nimport { ConfigModel } from 'src/app/shared/models/services/config/config.model';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n\n  selectedValue: string = \"word\";\n  isDisable = true;\n  config: ConfigModel;\n  form: FormGroup;\n\n  succesAlert:boolean = false;\n  $res: Subscription;\n\n  constructor(private configService: ConfigService, private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.$res = this.configService._configData.subscribe(x => {\n      this.config = x;\n    });\n    this.selectedValue = this.config.onlyWord? \"word\": \"sentence\";\n    this.createForm();\n  }\n\n  ngOnDestroy(): void{\n    if(this.$res){\n      this.$res.unsubscribe();\n    }\n  }\n\n  createForm(){\n    this.form = this.fb.group({\n      timeCb: [this.config.useTime, Validators.required],\n      timeVal: [this.config.sec , [Validators.required, Validators.min(10)]],\n      rounds: [this.config.roundCount, [Validators.required, Validators.min(2)]],\n    });\n  }\n\n  toggleFormTimeVal(){\n    this.isDisable = !this.isDisable;\n    if(Boolean(this.form.value.timeCb)){\n      this.form.controls.timeVal.setValidators([Validators.required]);\n    }\n    else{\n      this.form.controls.timeVal.clearValidators();\n    }\n    this.form.controls.timeVal.updateValueAndValidity();\n  }\n\n  onSubmit(){\n\n    if(this.form.valid){\n      let conf: ConfigModel= new ConfigModel(\n        Boolean(this.form.value.timeCb),\n        Number(this.form.controls.timeVal.value),\n        this.selectedValue === \"word\" ? true : false,\n        Number(this.form.controls.rounds.value)\n        );\n\n        this.succesAlert = true;\n        setTimeout(() => {\n          this.succesAlert = false;\n        }, 1000);\n\n      this.configService.config = conf;\n    }\n  }\n\n  get error(): boolean{\n    return !this.form.valid;\n  }\n\n  get timeVal() {\n    return this.form.get('timeVal');\n  }\n\n  get rounds() {\n    return this.form.get('rounds');\n  }\n\n}\n","<div id=\"settings\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" *ngIf=\"!!form\">\n        <h1 class=\"text-center\">Settings</h1>\n        <div class=\"option-area\">\n            <div class=\"title-div\">Multiplayer</div>\n            <div class=\"form-group text-center\">\n                <h5>Do you want play with time?</h5>\n                <div>\n                    <p-toggleButton (click)=\"toggleFormTimeVal()\" binary=\"true\" formControlName=\"timeCb\" onLabel=\"With_Time(sec)\" offLabel=\"Without_Time\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\"></p-toggleButton>\n                </div>\n                <div *ngIf=\"isDisable\" class=\"input-group text-center\">\n                    <input type=\"number\" class=\"form-control text-center\" min=\"10\" max=\"60\" [class.wrong]=\"timeVal.invalid\"  formControlName=\"timeVal\" id=\"time\" placeholder=\"Seconds...\">\n                </div>\n            </div>\n            <div class=\"form-group text-center\">\n                <h5>Number of Rounds:</h5>\n                <input type=\"number\" class=\"form-control text-center\" min=\"2\" max=\"10\" [class.wrong]=\"rounds.invalid\"  formControlName=\"rounds\" id=\"round\" placeholder=\"Rounds...\">\n            </div>\n        </div>\n        <div class=\"option-area\">\n            <div class=\"title-div\">Singleplayer & Multiplayer</div>\n            <div class=\"form-group text-center\">\n                <h5>Choose type of riddle:</h5>\n                <p-radioButton name=\"password-type\" label=\"Word\" value=\"word\" [(ngModel)]=\"selectedValue\" [ngModelOptions]=\"{standalone: true}\"></p-radioButton>\n                <p-radioButton name=\"password-type\" label=\"Sentence\" value=\"sentence\" [(ngModel)]=\"selectedValue\" style=\"margin-left:10px;\" [ngModelOptions]=\"{standalone: true}\"></p-radioButton>\n            </div>\n        </div>\n        <div class=\"text-center\" style=\"margin-top: 20px;\"> \n            <button type=\"submit\" class=\"btn btn-outline-success\">Save</button>\n        </div>\n\n        <div *ngIf=\"error\" class=\"alert alert-secondary\" role=\"alert\">\n            Please correct the data.\n        </div>\n\n        <div *ngIf=\"succesAlert\" class=\"alert alert-success\" role=\"alert\">\n            Data has been saved!\n        </div>\n    </form>\n</div>\n","export class ParseToStringArrHelper {\r\n\r\n    static parseToStringArr(value: string): string[] {\r\n      value = value.toUpperCase();\r\n      let resultArr: string[] =[];\r\n      \r\n      for(let i=0; i < value.length; i++){\r\n          resultArr.push(value.charAt(i));\r\n        }\r\n      return resultArr;\r\n    }\r\n  }\r\n  ","export class RandomIntInclusiveHelper {\r\n\r\n    static getRandomIntInclusive(min, max) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n}\r\n  \r\n\r\n","export class CharModel{\r\n    constructor(id: number, char: string, selected: boolean, isInPasswd: boolean){\r\n        this.id = id;\r\n        this.char = char;\r\n        this.selected = selected;\r\n        this.isInPasswd = isInPasswd;\r\n    }\r\n    \r\n    id: number;\r\n    char: string;\r\n    selected: boolean;\r\n    isInPasswd: boolean;\r\n}\r\n  ","export class PlayerModel{\r\n    constructor(id: number, name:string, isPlaying: boolean = false){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.isPlaying = isPlaying;\r\n    }\r\n    id: number;\r\n    name: string | null;\r\n    isPlaying: boolean;\r\n}","//models\r\nimport { PlayerModel } from '../../player.model';\r\n\r\nexport class ConfigModel{\r\n    constructor(useTime: boolean = false, sec: number | null = 60, onlyWord: boolean = true, \r\n        roundCount: number | null = 5, multiPlrGame: boolean = true){\r\n            \r\n        this.useTime = useTime;\r\n        this.sec = sec;\r\n        this.onlyWord = onlyWord;\r\n        this.roundCount = roundCount;\r\n        this.multiPlrGame = multiPlrGame;\r\n    }\r\n\r\n    useTime: boolean;\r\n    sec: number;\r\n    onlyWord: boolean;\r\n    roundCount: number;\r\n    multiPlrGame: boolean;\r\n    plr1: PlayerModel;\r\n    plr2: PlayerModel;\r\n}","//angular\nimport { Injectable } from '@angular/core';\n//models\nimport { ConfigModel } from '../models/services/config/config.model';\nimport { BehaviorSubject, ReplaySubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  _configData = new ReplaySubject<ConfigModel>(1);\n  dataStore: {\n    configData: ConfigModel | null,\n  }  \n\n  constructor(){\n    this.clear();\n    this.dataStore.configData = new ConfigModel(true,11,true,10,true);\n    this.refreshConfig(this.dataStore.configData);\n  }\n\n  clear() {\n    this.dataStore = {\n      configData: null\n    }\n  }\n  set config(conf: ConfigModel){\n    this.dataStore.configData = conf;\n    this.refreshConfig(this.dataStore.configData);  }\n\n  set typeOfGame(multiPlrGame: boolean){\n    this.dataStore.configData.multiPlrGame = multiPlrGame;\n    this.refreshConfig(this.dataStore.configData);\n  }\n\n  get configData(): Observable<ConfigModel>{\n    return this._configData.asObservable();\n  }\n\n  refreshConfig(config: ConfigModel){\n    this._configData.next(config);\n  }\n  \n}\n","//angular\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DbService {\n\n  constructor() { }\n\n  alphabet: string[] = ['A', 'Ą', 'B', 'C', 'Ć'\n    , 'D', 'E', 'Ę', 'F', 'G', 'H', 'I', 'J'\n    , 'K', 'L', 'Ł', 'M', 'N', 'Ń', 'O', 'Ó'\n    , 'P', 'Q', 'R', 'S', 'Ś', 'T', 'U', 'V'\n    , 'W', 'X', 'Y', 'Z', 'Ź', 'Ż'];\n\n  passwords: string[] =\n  [\n    'CUCUMBER',\n    'CAR',\n    'HOUSE',\n    'TREE',\n    'WINDOW',\n    'DESC',\n    'WARDROBE',\n    'CHAIR',\n    'BALL',\n    'GRASS',\n    'VELVETY',\n    'GRAY',\n    'ELECTRODE',\n    'LEBANON',\n    'STAR',\n    'TRACTOR',\n    'CAPTAIN',\n    'BOOMERANG',\n    'MICROPHONE',\n    'DEALER',\n    'SHOPKEEPER',\n    'BRICK',\n    'AIRBRICK',\n    'POND',\n\n  ];\n\n  sentences: string[] =\n  [\n    'OBJECT ORIENTATION',\n    'STATE OF SOBRIETY',\n    'HARD LEARNING',\n    'TIME FOR HEALTH',\n    'SCORE A GOAL',\n    'GREAT GAME',\n    'BUILD A HOUSE',\n    'GO BACK TO THE FAMILY',\n    'ELECTION SPOT',\n    'TEST TIME'\n  ];\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}